name: Duild and Deploy Config Server

on:
    push:
        branches:  [ main ]
    pull_request: 
        branches:  [ main ]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup .Net environment
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 8.0.x

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --configuration Release

            - name: Test
              run: dotnet test --no-build --verbostity normal --configuration Release --collect:"XPlat Code Coverage"

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              with:
                fail_ci_if_error: true
                flags: unitttests


    build-and-push:
        needs: test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                platform: [linux/amd64, linux/arm64, linux/386]
    
        steps:
            - uses: actions/checkout@v3
    
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
    
            - name: Login to Container Registry
              uses: docker/login-action@v2
              with:
                registry: ${{ secrets.REGISTRY_URL }}
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                context: .
                file: ./docker/Dockerfile
                platforms: ${{ matrix.platform }}
                push: true
                tags: |
                    ${{ secrets.REGISTRY_URL }}/config-server:latest
                    ${{ secrets.REGISTRY_URL }}/config-server:${{ github.sha }}
          
    create-release:
        needs: build-and-push
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
                        
        steps:
            - uses: actions/checkout@v3
                       
            - name: Create Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: v${{ github.run_number }}
                release_name: Release v${{ github.run_number }}
                draft: false
                prerelease: false 
            